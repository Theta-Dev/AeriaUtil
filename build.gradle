buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = "${mcversion}-${version_major}.${version_minor}"
group = "${author}.${modid}" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "${modid}"


sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

sourceSets.main.resources {
    srcDir 'src/generated/resources'
}

minecraft {
    mappings channel: "snapshot", version: project.mcp_mappings

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file("run/client").canonicalPath

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', ''
            property 'fml.earlyprogresswindow', 'false'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
            mods {
                "${modid}" {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file("run/server").canonicalPath

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', ''

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                "${modid}" {
                    source sourceSets.main
                }
            }
        }
        data {
            workingDirectory project.file("run/data").canonicalPath

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', ''

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
            property 'fml.earlyprogresswindow', 'false'

            args '--mod', archivesBaseName, '--all',
                    '--existing', '"' + file('src/main/resources/') + '"',
                    '--existing', '"' + file('src/generated/resources/') + '"',
                    '--output', '"' + file('src/generated/resources/') + '"'

            mods {
                "${modid}" {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories {

}

dependencies {
    minecraft([
		group  : "${project.forgegroup}",
		name   : "forge",
		version: "${project.mcversion}-${project.forgeversion}"
	])
}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
                "Specification-Title": archivesBaseName,
                "Specification-Vendor": "${author}",
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": archivesBaseName,
                "Implementation-Version": "${version}",
                "Implementation-Vendor" :"${author}",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

// Example configuration to allow publishing using the maven-publish task
// This is the preferred method to reobfuscate your jar file
jar.finalizedBy('reobfJar')